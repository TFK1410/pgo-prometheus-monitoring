apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-state-metrics
  name: kube-state-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-state-metrics
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      containers:
        - args:
            - '--secure-listen-address=:8443'
            - '--upstream=http://127.0.0.1:8081/'
            - '--tls-cert-file=/etc/tls/private/tls.crt'
            - '--tls-private-key-file=/etc/tls/private/tls.key'
            - >-
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
          image: 'quay.io/coreos/kube-rbac-proxy:v0.4.1'
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-main
          ports:
            - containerPort: 8443
              name: https-main
              protocol: TCP
          resources:
            limits:
              cpu: 20m
              memory: 40Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/tls/private
              name: kube-state-metrics-tls
        - args:
            - '--secure-listen-address=:9443'
            - '--upstream=http://127.0.0.1:8082/'
            - '--tls-cert-file=/etc/tls/private/tls.crt'
            - '--tls-private-key-file=/etc/tls/private/tls.key'
            - >-
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
          image: 'quay.io/coreos/kube-rbac-proxy:v0.4.1'
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-self
          ports:
            - containerPort: 9443
              name: https-self
              protocol: TCP
          resources:
            limits:
              cpu: 20m
              memory: 40Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/tls/private
              name: kube-state-metrics-tls
        - args:
            - '--host=127.0.0.1'
            - '--port=8081'
            - '--telemetry-host=127.0.0.1'
            - '--telemetry-port=8082'
            - '--collectors=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,volumeattachments'
          image: 'quay.io/coreos/kube-state-metrics:v1.9.5'
          imagePullPolicy: IfNotPresent
          name: kube-state-metrics
          volumeMounts:
            - mountPath: /tmp
              name: volume-directive-shadow
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
      restartPolicy: Always
      serviceAccount: kube-state-metrics
      serviceAccountName: kube-state-metrics
      volumes:
        - emptyDir: {}
          name: volume-directive-shadow
        - name: kube-state-metrics-tls
          secret:
            defaultMode: 420
            secretName: kube-state-metrics-tls
        - hostPath:
            path: /etc/localtime
            type: ''
          name: timezone
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: kube-state-metrics-tls
  labels:
    prometheus: kube-state-metrics-custom
  name: kube-state-metrics
spec:
  clusterIP: None
  ports:
    - name: https-main
      port: 8443
      protocol: TCP
      targetPort: https-main
    - name: https-self
      port: 9443
      protocol: TCP
      targetPort: https-self
  selector:
    app: kube-state-metrics
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
---
apiVersion: authorization.openshift.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics-custom
roleRef:
  name: kube-state-metrics-custom
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
  namespace: <NAMESPACE>
---
apiVersion: authorization.openshift.io/v1
kind: ClusterRole
metadata:
  name: kube-state-metrics-custom
rules:
- apiGroups:
  - ""
  attributeRestrictions: null
  resources:
  - configmaps
  - endpoints
  - limitranges
  - namespaces
  - nodes
  - persistentvolumeclaims
  - persistentvolumes
  - pods
  - replicationcontrollers
  - resourcequotas
  - secrets
  - services
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  attributeRestrictions: null
  resources:
  - daemonsets
  - deployments
  - replicasets
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  attributeRestrictions: null
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  attributeRestrictions: null
  resources:
  - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  attributeRestrictions: null
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  attributeRestrictions: null
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  attributeRestrictions: null
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  - volumeattachments
  verbs:
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: kube-state-metrics
  name: kube-state-metrics
spec:
  endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      honorLabels: true
      interval: 2m
      port: https-main
      scheme: https
      scrapeTimeout: 2m
      targetPort: 0
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        serverName: kube-state-metrics.<NAMESPACE>.svc
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      interval: 2m
      port: https-self
      scheme: https
      scrapeTimeout: 2m
      targetPort: 0
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        serverName: kube-state-metrics.<NAMESPACE>.svc
  selector:
    matchLabels:
      prometheus: kube-state-metrics-custom
---
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowedCapabilities: null
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: kube-state-metrics scc is used for the kube-state-metrics
      component to be able to mount `/etc/localtime` to have kube-state-metrics be
      able to have the same timezone settings as the host.
  name: kube-state-metrics-custom
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:<NAMESPACE>:kube-state-metrics
volumes:
- '*'
